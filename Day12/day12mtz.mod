# Наборы и параметры
param num_cities;
set N := 1..num_cities;  # множество городов
param c{N,N} >= 0;  # матрица стоимостей переездов

# Переменные
var x{i in N, j in N} binary;   # x[i,j] = 1, если маршрут идёт из i в j
var u{i in N} >= 0;             # переменные для MTZ

# Целевая функция: минимизация суммарной стоимости
minimize Total_Distance:
   sum{i in N, j in N} c[i,j] * x[i,j];

# Ограничения
# 1. Из каждого города выходит ровно один маршрут
s.t. out_degree{i in N}:
   sum{j in N} x[i,j] = 1;

# 2. В каждый город входит ровно один маршрут
s.t. in_degree{j in N}:
   sum{i in N} x[i,j] = 1;

# Исключение тривиальных петель
s.t. no_loops{i in N}:
   x[i,i] = 0;

# Ограничения MTZ для предотвращения субтуров
# Предположим, что город 1 - стартовый, и зафиксируем u[1] = 1
# M можно выбрать равным количеству городов (или чуть больше)
param M := card(N);

s.t. fix_u1:
   u[1] = 1;

s.t. MTZ_SubTours{i in 2..num_cities, j in 2..num_cities: i != j}:
   u[j] >= u[i] + 1 - M*(1 - x[i,j]);

# Дополнительное ограничение на верхнюю границу u[i], чтобы сузить их диапазон
s.t. u_bounds{i in N}:
   u[i] <= card(N);

